{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "influxdb",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.1.5"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "panels": [],
      "title": "Temperature status port",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 25,
      "maxPerRow": 8,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "/.*/",
          "values": true
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.5",
      "repeat": "TempActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^TempDescriptionPort${TempActivePort:regex}$/)\r\n  |> group()\r\n  |> distinct(column: \"_value\")",
          "refId": "A"
        }
      ],
      "title": ".",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 1,
      "maxPerRow": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.5",
      "repeat": "TempActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TempDegreePort${TempActivePort}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Temp Degree Port${TempActivPort}",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 5,
      "panels": [],
      "title": "Temperature degree ports",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 24,
      "maxPerRow": 8,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "/.*/",
          "values": true
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.5",
      "repeat": "TempActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^TempDescriptionPort${TempActivePort:regex}$/)\r\n  |> group()\r\n  |> distinct(column: \"_value\")",
          "refId": "A"
        }
      ],
      "title": ".",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 0,
                  "text": "noData"
                },
                "1": {
                  "index": 1,
                  "text": "noStatus"
                },
                "2": {
                  "index": 2,
                  "text": "normal"
                },
                "4": {
                  "index": 3,
                  "text": "highCritical"
                },
                "6": {
                  "index": 4,
                  "text": "lowCritical"
                },
                "7": {
                  "index": 5,
                  "text": "sensorError"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 2,
      "maxPerRow": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.5",
      "repeat": "TempActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"TempStatusPort${TempActivePort}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Temp Status Port${TempActivPort}",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 6,
      "panels": [],
      "title": "Liquid status port",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 6,
        "x": 0,
        "y": 21
      },
      "id": 21,
      "maxPerRow": 8,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "/.*/",
          "values": true
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.1.5",
      "repeat": "LiquidActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^LiquidDescriptionPort${LiquidActivePort:regex}$/)\r\n  |> group()\r\n  |> distinct(column: \"_value\")",
          "refId": "A"
        }
      ],
      "title": ".",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 0,
                  "text": "noData"
                },
                "1": {
                  "index": 1,
                  "text": "noStatus"
                },
                "2": {
                  "index": 2,
                  "text": "normal"
                },
                "4": {
                  "index": 3,
                  "text": "highCritical"
                },
                "6": {
                  "index": 4,
                  "text": "lowCritical"
                },
                "7": {
                  "index": 5,
                  "text": "sensorError"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 0,
        "y": 24
      },
      "id": 3,
      "maxPerRow": 8,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.1.5",
      "repeat": "LiquidActivePort",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"LiquidStatusPort${LiquidActivePort}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")\r\n",
          "refId": "A"
        }
      ],
      "type": "gauge"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> keep(columns: [\"agent_host\"])\r\n  |> distinct(column: \"agent_host\")\r\n  |> group()",
        "hide": 0,
        "includeAll": false,
        "label": "Agent Host",
        "multi": false,
        "name": "AgentHost",
        "options": [],
        "query": "from(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> keep(columns: [\"agent_host\"])\r\n  |> distinct(column: \"agent_host\")\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"strings\"\r\n\r\nfrom(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^LiquidDescriptionPort\\d+$/)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> distinct(column: \"_field\")\r\n  |> map(fn: (r) => ({r with _field: strings.replace(v: r._field, t: \"LiquidDescriptionPort\", u: \"\", i: 1)}))\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Liquid Active Port",
        "multi": true,
        "name": "LiquidActivePort",
        "options": [],
        "query": "import \"strings\"\r\n\r\nfrom(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^LiquidDescriptionPort\\d+$/)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> distinct(column: \"_field\")\r\n  |> map(fn: (r) => ({r with _field: strings.replace(v: r._field, t: \"LiquidDescriptionPort\", u: \"\", i: 1)}))\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "import \"strings\"\r\n\r\nfrom(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^TempDescriptionPort\\d+$/)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> distinct(column: \"_field\")\r\n  |> map(fn: (r) => ({r with _field: strings.replace(v: r._field, t: \"TempDescriptionPort\", u: \"\", i: 1)}))\r\n  |> group()\r\n",
        "hide": 0,
        "includeAll": true,
        "label": "Temp Active Port",
        "multi": true,
        "name": "TempActivePort",
        "options": [],
        "query": "import \"strings\"\r\n\r\nfrom(bucket: \"warn\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /^TempDescriptionPort\\d+$/)\r\n  |> filter(fn: (r) => r[\"agent_host\"] == \"${AgentHost}\")\r\n  |> distinct(column: \"_field\")\r\n  |> map(fn: (r) => ({r with _field: strings.replace(v: r._field, t: \"TempDescriptionPort\", u: \"\", i: 1)}))\r\n  |> group()\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Warnsystem AKCP",
  "uid": "b2ef3647-4611-4f22-9622-8fa8fd429718",
  "version": 28,
  "weekStart": ""
}